{"version":3,"sources":["components/Select/Select.js","components/Buttons/Buttons.js","components/GoodsList/Goodslist.js","App.js","index.js"],"names":["Select","value","action","onChange","map","element","index","key","Buttons","reverse","sort","reset","sortLength","type","onClick","GoodsList","state","goods","props","goodsList","length","setState","prevState","sortAlphabetically","a","b","select","target","filter","item","this","className","good","React","Component","goodsFromServer","App","isReady","onStart","ReactDOM","render","document","getElementById"],"mappings":"+MAuBeA,EApBA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAGvB,OACE,4BAAQC,SAAUD,EAAQD,MAAOA,GAHtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAK9BG,KAAI,SAACC,EAASC,GAAV,OACP,4BAAQC,IAAKF,EAASJ,MAAOK,EAAQ,GAClCA,EAAQ,QC4BNE,EApCC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,WAAzB,OACd,6BACE,4BACEC,KAAK,SACLC,QAASL,GAFX,WAMA,4BACEI,KAAK,SACLC,QAASJ,GAFX,uBAMA,4BACEG,KAAK,SACLC,QAASH,GAFX,SAMA,4BACEE,KAAK,SACLC,QAASF,GAFX,oBClBiBG,E,4MACnBC,MAAQ,CACNC,MAAO,EAAKC,MAAMC,UAClBC,OAAQ,G,EAGVX,QAAU,WACR,EAAKY,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOR,e,EAIhCc,mBAAqB,WACnB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOP,Y,EAIhCC,MAAQ,WACN,EAAKU,SAAS,CACZJ,MAAO,EAAKC,MAAMC,UAClBC,OAAQ,K,EAIZR,WAAa,WACX,EAAKS,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOP,MAAK,SAACc,EAAGC,GAAJ,OAAUD,EAAEJ,OAASK,EAAEL,e,EAI5DM,OAAS,YAAiB,IAAdC,EAAa,EAAbA,OACV,EAAKN,SAAS,CACZD,OAAQO,EAAO1B,MACfgB,MAAO,EAAKC,MAAMC,UAAUS,QAAO,SAAAC,GAAI,OACrCA,EAAKT,QAAUO,EAAO1B,Y,uDAIlB,IAAD,EACmB6B,KAAKd,MAAvBC,EADD,EACCA,MAAOG,EADR,EACQA,OAEf,OACE,wBAAIW,UAAU,SACXd,EAAMb,KAAI,SAAA4B,GAAI,OACb,wBAAIzB,IAAKyB,GACNA,MAGL,kBAAC,EAAD,CACErB,MAAOmB,KAAKnB,MACZF,QAASqB,KAAKrB,QACdC,KAAMoB,KAAKP,mBACXX,WAAYkB,KAAKlB,aAEnB,kBAAC,EAAD,CAAQX,MAAOmB,EAAQlB,OAAQ4B,KAAKJ,c,GAvDLO,IAAMC,WCFvCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmCaC,E,4MA/BbpB,MAAQ,CACNqB,SAAS,G,EAGXC,QAAU,WACR,EAAKjB,SAAS,CACZgB,SAAS,K,uDAIH,IAAD,OACCA,EAAYP,KAAKd,MAAjBqB,QAER,OACE,yBAAKN,UAAU,OACb,qCACCM,EACI,kBAAC,EAAD,CAAWlB,UAAWgB,IAEvB,4BACEtB,KAAK,SACLC,QAAS,kBAAM,EAAKwB,SAAQ,KAF9B,c,GApBML,IAAMC,WCZxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5ffc3a3e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Select = ({ value, action }) => {\n  const list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  return (\n    <select onChange={action} value={value}>\n      {\n        list.map((element, index) => (\n          <option key={element} value={index + 1}>\n            {index + 1}\n          </option>\n        ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  value: PropTypes.number.isRequired,\n  action: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Buttons = ({ reverse, sort, reset, sortLength }) => (\n  <div>\n    <button\n      type=\"button\"\n      onClick={reverse}\n    >\n      Reverse\n    </button>\n    <button\n      type=\"button\"\n      onClick={sort}\n    >\n      Sort alphabetically\n    </button>\n    <button\n      type=\"button\"\n      onClick={reset}\n    >\n      Reset\n    </button>\n    <button\n      type=\"button\"\n      onClick={sortLength}\n    >\n      Sort by length\n    </button>\n  </div>\n);\n\nButtons.propTypes = {\n  reset: PropTypes.func.isRequired,\n  reverse: PropTypes.func.isRequired,\n  sort: PropTypes.func.isRequired,\n  sortLength: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '../Select/Select';\nimport Buttons from '../Buttons/Buttons';\n\nexport default class GoodsList extends React.Component {\n  state = {\n    goods: this.props.goodsList,\n    length: 1,\n  }\n\n  reverse = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortAlphabetically = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort(),\n    }));\n  }\n\n  reset = () => {\n    this.setState({\n      goods: this.props.goodsList,\n      length: 1,\n    });\n  }\n\n  sortLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  select = ({ target }) => {\n    this.setState({\n      length: target.value,\n      goods: this.props.goodsList.filter(item => (\n        item.length >= target.value)),\n    });\n  }\n\n  render() {\n    const { goods, length } = this.state;\n\n    return (\n      <ul className=\"goods\">\n        {goods.map(good => (\n          <li key={good}>\n            {good}\n          </li>\n        ))}\n        <Buttons\n          reset={this.reset}\n          reverse={this.reverse}\n          sort={this.sortAlphabetically}\n          sortLength={this.sortLength}\n        />\n        <Select value={length} action={this.select} />\n      </ul>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goodsList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport GoodsList from './components/GoodsList/Goodslist';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isReady: false,\n  }\n\n  onStart = () => {\n    this.setState({\n      isReady: true,\n    });\n  }\n\n  render() {\n    const { isReady } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isReady\n          ? (<GoodsList goodsList={goodsFromServer} />)\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.onStart(true)}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}